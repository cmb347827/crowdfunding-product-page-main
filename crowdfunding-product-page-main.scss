
 
@import 'custom.scss';
@import '_globals.scss';

$colors: (
  White: hsl(0, 0%, 100%),
  Black: hsl(0, 0%, 0%),
  Dark Gray: hsl(0, 0%, 55%),
  Moderate cyan: hsl(176, 50%, 47%),
  Dark cyan: hsl(176, 72%, 28%),
);
$fallback-colors: (
  White Black #999999 Aquamarine4 'British Racing Green'
);

@mixin font-color($color, $fallback-color) {
  color: $fallback-color;
  color: $color;
}

@mixin bg-color($color, $fallback-color) {
  background-color: $fallback-color;
  background-color: $color;
}


@mixin border-radius($radius...) {
  border-radius: $radius;
}
@mixin margin($args...) {
  margin: $args;
}
@mixin padding($args...) {
  padding: $args;
}

*,
::before,
::after {
  box-sizing: border-box;
}
html{
  @include bg-color(map-get($colors,Dark Gray),nth($fallback-colors,3));
}
body {
  font: {
     //default 16 px/1rem.
     size: 100%; 
     weight: $font_weight-normal;
     family:"Commissioner", sans-serif;
  }
}

//adds a green border when a pledge is checked
.inner:has(input[type='radio']:checked  ) {      
    border:3px solid map-get($colors,Dark cyan);
}

.bookmark-gray{
  @include bg-color(lighten(map-get($colors,Dark Gray),18),nth($fallback-colors,3));
  @include font-color(map-get($colors,Black),nth($fallback-colors,2));
  svg{
    & circle{
      fill:#2F2F2F;
    }
  }
}
.bookmark-blue{
  @include bg-color(lighten(map-get($colors,Moderate cyan),18),nth($fallback-colors,4));
  @include font-color(map-get($colors,Dark cyan),nth($fallback-colors,5));
  svg {
    & circle {
      fill: map-get($colors,Moderate cyan);
    }
  }   
}
.overlay{
  position: fixed;
  width: 100%; 
  height: 100%; 
  top: 0;
  left: 0;
  background-color: rgba(0,0,0,0.5); 
  z-index: -1; 
}

.disabled-overlay{
  opacity:0.5;
}
.hide{
  display:none;
}
.hidden{
  display:none;
  @media screen and(min-width:$container__form-xxl){
     display:block;
  }
}
.show{
  display:block;
  @include media-breakpoint-up(xxl){
     display:none;
  }
}
.top-z-index{
  //needed for z-index.
  position: relative;
  z-index: 1;
  opacity:1;
}

#header{
  width: $container__form-xs;
  @include margin(0 auto);  
  @include padding(50px 15px);
  background: url(./images/image-hero-mobile.jpg) center center/100% 100% no-repeat;
  z-index:0;
  
  #nav{
    #menubutton{
       position:relative;
       bottom: 15px;
    }
    
    a{
      @include font-color(map-get($colors,Black),nth($fallback-colors,2));
      @include media-breakpoint-up(xxl){
        @include font-color(map-get($colors,White),nth($fallback-colors,1));
        &:hover{
          cursor:pointer;
        }
      }
    }
    #navbarCollapse{
      
      @include media-breakpoint-down(xxl){
         .navbar-nav{
            @include padding(30px 10px);
            @include bg-color(map-get($colors,White),nth($fallback-colors,1));
            
            //position absolute is used, so the menu is positioned on-top of header background without pushing contents down.
            position: absolute;
            right:-15px;
            top:-1em;
            width: 375px;
         }
      }
    }
  }
  @include media-breakpoint-up(xxl){
    //wanted to use only padding instead of setting a min-height, but then justify-content-around to disperse the elements across the y-axis doesn't work.
    @include padding(0 150px);
    width:$container__form-xxl;
    min-height:430px;
    background: url(./images/image-hero-desktop.jpg) center center/100% 100% no-repeat;
  }
}

#main{
  width:$container__form-xs;
  @include margin(0 auto); 
  margin-top: 20px;
  z-index:1;
  .desktop{
    display:none;
    @include media-breakpoint-up(xxl){
      display:block;
    }
  }
  progress{
    width:$container__form-xs;
    &::-webkit-progress-value{
      @include bg-color(map-get($colors,Moderate cyan),nth($fallback-colors,4));
    }
    @include media-breakpoint-up(xxl){
      width:$container__form-l;
    }
  }
  .mobile{
    display:block;
    @include media-breakpoint-up(xxl){
      display:none;
    }
  }
  > section, > div{
     @include bg-color(map-get($colors,white),nth($fallback-colors,1));
  }
  #logo{
    position:relative;
    top:-35px;
    display:block;
  }

  .font-color-green{
    @include font-color(map-get($colors,Moderate cyan),nth($fallback-colors,4));
  }
  dialog{
    width:$container__form-xs;
    @include media-breakpoint-up(xxl){
      width:$container__form-l;
    }
    &.smaller-width{
      @include media-breakpoint-up(xxl){
        width:$container__form-md;
      }
    }
    form{
      .inner-pledge-collapse{
        min-height: 100px;
      }
      
      .font-color-black-green-onhover{
        @include font-color(map-get($colors,Black),nth($fallback-colors,2));
        &:hover{
          @include font-color(map-get($colors,Moderate cyan),nth($fallback-colors,4));
        }
      }
    }
  }
  
  .green{
    @include bg-color(map-get($colors,Moderate cyan),nth($fallback-colors,4));
    &:hover{
      @include bg-color(map-get($colors,Dark cyan),nth($fallback-colors,5));
    }
  }
  .move-down{
    position:relative;
    top:5px;
  }
  .move-left{
    position:relative;
    right: 60px;
  }
  .move-up{
    position:relative;
    bottom: 15px;
  }
 
  .svg{
    svg{
      position:relative;
      top:-10px;
      left:-10px;
      transform:scale(0.5,0.5);
    }
  }
  button{
    height: 40px;
    border:none;
    border-radius: 20px;
    &:hover{
      cursor:pointer;
    }
  }
  .btnWidth-150{
    width: 150px;
  }
  .btnWidth-200{
    width: 200px;
  }
  .progress-bar{
    @include bg-color(map-get($colors,Moderate cyan),nth($fallback-colors,4));
  }
  .inner-pledge-collapse{
    display:none;
  }
  .inner:has([name=pledge]:checked)  .inner-pledge-collapse{
    display:block;
  }
  
  .toggle{
    appearance: none;
    width: 62px;
    height: 32px;
    display: inline-block;
    position: relative;
    border-radius: 50px;
    overflow: hidden;
    outline: 2px solid gray;
    //cursor: pointer;
    @include bg-color(map-get($colors,white),nth($fallback-colors,1));
    transition: background-color ease 0.3s;
  }
  
  .toggle::before {
    content: "|";
    display: block;
    position: absolute;
    z-index: 2;
    width: 4px;
    background: gray;
    left: 35px;
    //white-space: nowrap;
    transition: all cubic-bezier(0.3, 1.5, 0.7, 1) 0.3s;
  }
  
  .toggle:focus{
    @include bg-color(lighten(map-get($colors,Moderate cyan),12),nth($fallback-colors,4));

    &::before{
      //once the toggle is checked, the toggle button moves to the right.
      left: 60px;
    }
  }
  
  
  
  .white-non-opaque-background{
    background-color: rgba(255, 255, 255, 1);
  }
  
  @include media-breakpoint-up(xxl){
    margin-top: -300px;
     width: $container__form-xxl;
     @include padding(150px);
     > section, > div:not(#success-message){
          width:$container__form-l;
          @include margin(50px auto);
     }
  }
  
}


#bottom-footer {
.attribution {
  font-size: $font_size-8;
  text-align: center;
}
.attribution a {
  color: hsl(228, 45%, 44%);
}
}

